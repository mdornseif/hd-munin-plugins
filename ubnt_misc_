#!/usr/local/bin/perl
###############################################################################
use diagnostics;
use Net::Telnet;
use strict;
use warnings;
##############################################################################
my $TelnetPort = "23";
my $TelnetUser = "ubnt";
my $TelnetPass = "ubnt";

###############################################################################
## Determine Hostname
my $Host = "ubnt1.local.hudora.biz";
$0 =~ /^(?:|.*\/)ubnt_misc_([^_]+)$/;
unless ($Host = $1) {
  exit 2;
}

###############################################################################
## Initiate Telnet Session
my $MT = Net::Telnet->new(Host    => $Host,
                                 Port    => $TelnetPort,
                                 Prompt  => '/[\>\#] $/',
                                 Timeout => 30);

###############################################################################
## Configuration
if ($ARGV[0] && $ARGV[0] eq "config") {
  print "host_name " . $Host . "\n";
  print "graph_args -l 0 --lower-limit -100 --upper-limit 100\n";
  print "graph_title Interface wifi0 quality\n";
  print "graph_vlabel Comms Quality\n";
  print "graph_category network\n";
  print "graph_info This graph shows the wireless interface statistics\n";
  print "graph_order txccq txsignal txrate rxrate acttimeout noisefloor\n";
  print "graph_scale no\n";
  print "txccq.label TX CCQ (%)\n";
  print "txsignal.label TX Signal Strength (dBm)\n";
  print "acttimeout.label ACT Timeout (us)\n";
  print "noisefloor.label Noise Floor (dBm)\n";
  print "txrate.label TX Rate (Mbps)\n";
  print "rxrate.label RX Rate (Mbps)\n";
  exit;
}

###############################################################################
## Execution
if (!defined($MT->login($TelnetUser, $TelnetPass))) {
  die "Croaking: $MT->error";
} else {
  my @Output = $MT->cmd("ubntbox mca-status\nD\n");
  my ($rest, $tmp, $txccq, $txsignal, $stn, $otxccq, $acttimeout,
  $noisefloor, $txrate, $rxrate) = undef;
  foreach my $Line (@Output) {
    if (($Line =~ /ccq/ && $Line !~ /overall-tx-ccq/) && $Line =~ m/(\d+)/)
{
      $txccq = $1 / 10;
    }
    if ($Line =~ /signal/ && $Line =~ m/(.\d+)/) {
      $txsignal = $1;
    }
    if ($Line =~ /noise/ && $Line =~ m/(.\d+)/) {
      $noisefloor = $1;
    }
        if ($Line =~ /ackTimeout/ && $Line =~ m/(\d+)/) {
      $acttimeout = $1;
    }
    if ($Line =~ /wlanTxRate/ && $Line =~ m/(\d+)/) {
      $txrate = $1;
    }
    if ($Line =~ /wlanRxRate/ && $Line =~ m/(\d+)/) {
      $rxrate = $1;
    }
  }
  print "txccq.value " . $txccq . "\n";
  print "txsignal.value " . $txsignal . "\n";
  print "acttimeout.value " . $acttimeout . "\n";
  print "noisefloor.value " . $noisefloor . "\n";
  print "txrate.value " . $txrate . "\n";
  print "rxrate.value " . $rxrate . "\n";
  exit;
}

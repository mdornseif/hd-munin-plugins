#!/usr/local/bin/python

"""Munit Plugin fuer haengende SoftM Dateifuehrungschluessel."""

import anydbm
import httplib
import urllib
import os
import sys
import time
import simplejson as json

max_time_in_schnittstelle = (24*60*60)+1 # == 24h

db = anydbm.open('/tmp/munin_auftragsschnittstelle_cache.db', 'c')

tables = {'ALK00': "SELECT LKSANK, LKDFSL, LKSTAT FROM ALK00 WHERE LKDFSL<>'' AND LKSTAT=''",
          'ALN00': "SELECT LNSANK, LNSANP, LNSTAT FROM ALN00 WHERE LNDFSL<>'' AND LNSTAT=''",
          'AAK00': "SELECT AKAUFN, AKDFSL, AKSTAT FROM AAK00 WHERE AKDFSL<>'' AND AKSTAT=''",
          'AAP00': "SELECT APAUFN, APDFSL, APSTAT FROM AAP00 WHERE APDFSL<>'' AND APSTAT=''",          
          'EBP00': "SELECT BPBSTN, BPBSTP, BPDFSL FROM EBP00 WHERE BPDFSL<>'' AND BPSTAT=''",          
          'EBT00': "SELECT BTBSTN, BTBSTP, BTDFSL FROM EBT00 WHERE BTDFSL<>'' AND BTSTAT=''",          
# Other Candidates:
# SELECT VAKDNR, VAVANR, VADFSL, VASTAT FROM AVA00
#ABA #ABK #ABT #ABV #AFK #AFM #AFP #AFR #AFS #AFM
#AFU #AFT #AFV #AFX #AKZ #AKO #AKT #AKD #ALX #APR
#ARH00 #ARL #ARP #ARS #ART #ARU #ARZ
          }
          
def query(sqlstr):
    param = urllib.quote(sqlstr)
    conn = httplib.HTTPConnection("localhost:8000")
    conn.request("GET", "/select?query=" + param)
    response = conn.getresponse()
    if response.status != 200:
        errorinfo = response.read()
        raise RuntimeError("Server Error: %r" % errorinfo)
    return json.loads(response.read())


haenger = {}
offen = {}
for table, querystr in tables.items():
  rows = query(querystr)
  haenger[table] = 0
  offen[table] = 0
  for row in rows:
    vorgang, status, dfsl = row  
    offen[table] += 1
    if str(row) in db:
        firstseen = int(db[str(row)])
        if time.time() - firstseen > max_time_in_schnittstelle:
            haenger[table] += 1
    else:
        db[str(row)] = str(int(time.time()))

        
if sys.argv[-1] == "config":
    print "graph_title SoftM Dateifuehrungsschluessel"
    print 'graph_vlabel Zeilen'
    print 'graph_args --lower-limit 0'
    print 'graph_category other'
    for table in tables.keys():
      print "%sopen.label Unbearbeitet %s" % (table, table)
      print "%sstale.label Haenger %s" % (table, table)
      print "%sstale.warning 0" % table
      print "%sstale.critical 0" % table   
else:
    for table in tables.keys():
        print "%sopen.value %d" % (table, offen[table])
        print "%sstale.value %d" % (table, haenger[table])
    
        
os.system("chmod 666 /tmp/munin_auftragsschnittstelle_cache.*")
